plugins:

  cfy_util:
    executor: central_deployment_agent
    source: https://github.com/cloudify-incubator/cloudify-utilities-plugin/archive/21-NodeInstanceProxy.zip

  keys:
    executor: central_deployment_agent
    source: https://github.com/cloudify-incubator/cloudify-utilities-plugin/archive/v1.1.1.zip

data_types:

  cloudify.datatypes.Blueprint:
    properties:
      id:
        description: >
          This is the blueprint that the deployment node is a proxy to.
        required: false
      main_file_name:
        description: >
          The application blueprint filename. If the blueprint consists many imported files this is the main blueprint.
        default: blueprint.yaml
      blueprint_archive:
        description: >
          The URL of a .zip to upload to the manager.
        required: true
      unvalidated:
        default: {}

  cloudify.datatypes.Deployment:
    properties:
      id:
        description: >
          This is the deployment that the node is a proxy to.
        required: false
      inputs:
        description: >
          The inputs to the deployment.
        default: {}
      outputs:
        description: >
          A dictionary of "{ key: value, key: value }".
          Get "key" the deployment.
          Set "value" runtime property to the value of the output.
        required: false
      unvalidated:
        default: {}

  cloudify.datatypes.Node:
    properties:
      id:
        type: string

  cloudify.datatypes.NodeInstance:
    properties:
      node:
        type: cloudify.datatypes.Node
        required: false
      id:
        type: string
        required: false

  cloudify.datatypes.DeploymentProxy:
    properties:
      blueprint:
        type: cloudify.datatypes.Blueprint
        required: true
      deployment:
        type: cloudify.datatypes.Deployment
        required: true

  cloudify.datatypes.NodeInstanceProxy:
    properties:
      blueprint:
        type: cloudify.datatypes.Blueprint
        required: true
      deployment:
        type: cloudify.datatypes.Deployment
        required: true
      node_instance:
        type: cloudify.datatypes.NodeInstance

  cloudify.datatypes.key:
    properties:
      private_key_path:
        type: string
        required: false
      public_key_path:
        type: string
        default: '~/.ssh/id_rsa.pub'
      algorithm:
        type: string
        default: 'RSA'
      bits:
        type: integer
        default: 2048
      comment:
        type: string
        required: false
      passphrase:
        type: string
        required: false
      openssh_format:
        type: boolean
        required: false
      unvalidated:
        description: Unvalidated parameters.
        required: false

node_types:

  cloudify.nodes.DeploymentProxy:
    derived_from: cloudify.nodes.Root
    properties:
      resource_config:
        type: cloudify.datatypes.DeploymentProxy
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: cfy_util.cloudify_deployment_proxy.tasks.upload_blueprint
        configure:
          implementation: cfy_util.cloudify_deployment_proxy.tasks.create_deployment
        start:
          implementation: cfy_util.cloudify_deployment_proxy.tasks.execute_start
          inputs:
            workflow_id:
              default: install
        stop:
          implementation: cfy_util.cloudify_deployment_proxy.tasks.execute_start
          inputs:
            workflow_id:
              default: uninstall
        delete:
          implementation: cfy_util.cloudify_deployment_proxy.tasks.delete_deployment

  cloudify.nodes.NodeInstanceProxy:
    derived_from: cloudify.nodes.DeploymentProxy
    properties:
      resource_config:
        type: cloudify.datatypes.NodeInstanceProxy
        default: {}

  cloudify.nodes.NodeInstanceProxy.Compute:
    derived_from: cloudify.nodes.Compute
    properties:
      agent_config:
        default:
          install_method: provided
          port: 22
      resource_config:
        type: cloudify.datatypes.NodeInstanceProxy
        default: {}
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: cfy_util.cloudify_deployment_proxy.tasks.upload_blueprint
        configure:
          implementation: cfy_util.cloudify_deployment_proxy.tasks.create_deployment
        start:
          implementation: cfy_util.cloudify_deployment_proxy.tasks.execute_start
          inputs:
            workflow_id:
              default: install
        stop:
          implementation: cfy_util.cloudify_deployment_proxy.tasks.execute_start
          inputs:
            workflow_id:
              default: uninstall
        delete:
          implementation: cfy_util.cloudify_deployment_proxy.tasks.delete_deployment
      cloudify.interfaces.cloudify_agent:
        create:
          implementation: agent.cloudify_agent.installer.operations.create
          executor: central_deployment_agent
          inputs:
            agent_config:
              default: { get_attribute: [ SELF, cloudify_agent ] }
        configure:
          implementation: agent.cloudify_agent.installer.operations.configure
          executor: central_deployment_agent
          inputs:
            agent_config:
              default: { get_attribute: [ SELF, cloudify_agent ] }
        start:
          implementation: agent.cloudify_agent.installer.operations.start
          executor: central_deployment_agent
          inputs:
            agent_config:
              default: { get_attribute: [ SELF, cloudify_agent ] }
        stop:
          implementation: agent.cloudify_agent.installer.operations.stop
          executor: central_deployment_agent
          inputs:
            agent_config:
              default: { get_attribute: [ SELF, cloudify_agent ] }
        delete:
          implementation: agent.cloudify_agent.installer.operations.delete
          executor: central_deployment_agent
          inputs:
            agent_config:
              default: { get_attribute: [ SELF, cloudify_agent ] }
        restart:
          implementation: agent.cloudify_agent.installer.operations.restart
          executor: central_deployment_agent
          inputs:
            agent_config:
              default: { get_attribute: [ SELF, cloudify_agent ] }

  cloudify.keys.nodes.RSAKey:
    derived_from: cloudify.nodes.Root
    properties:
      use_secret_store:
        type: boolean
        default: true
      key_name:
        type: string
        required: false
        description: >
          If use_secret_store is true the key is stored in secret store by that name.
          Else, the name is deployment_id-instance_id.
      resource_config:
        description: >
          A dictionary of values to pass to configure the key.
        type: cloudify.datatypes.key
        required: true
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          implementation: keys.cloudify_ssh_key.operations.create
        delete:
          implementation: keys.cloudify_ssh_key.operations.delete
